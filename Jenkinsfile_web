pipeline {
    // don't trigger rebuild plz
    triggers { 
         pollSCM('*/1 * * * *') 
     }
    agent any
    stages { 
        stage('build') {
            steps {
                echo "Building"
            }
        }

        stage('deploy_staging') {
            steps {
                echo "Deploying to staging"
            }
            post {
                success {
                    sh 'sh ./send_notification.sh "staging deployment" 0'
                }
                failure {
                    sh 'sh ./send_notification.sh "staging deployment" 1'
                }  
            }
        }
        stage('test_staging'){          
            stages {
                stage('setup_test_env'){
                    steps {
                        echo "Testing on staging"
                        sh "docker pull rolandsjlociks/mvn_tests:latest"
                        sh "docker compose -f docker-compose-web.yaml up -d"
                        
                    }
            }
                
                stage('run_tests'){
                    parallel {
                            stage ("chrome") {
                                steps {
                                sh "docker run --network=test-automation-setup rolandsjlociks/mvn_tests mvn clean test -Dbrowser=chrome -DgridURL=chrome:5555"
                                }
                            }
                            stage("firefox") {
                            steps {
                                sh "docker run --network=test-automation-setup rolandsjlociks/mvn_tests mvn clean test -Dbrowser=firefox -DgridURL=firefox:5555"
                                }
                            }
                    }
                }
            }
            post {
                always {
                    sh "docker compose down"
                }
                success {
                    sh "sh ./send_notification.sh 'staging testing' 0"
                }
                failure {
                    sh "sh ./send_notification.sh 'staging testing' 1"
                }  
            }
        }
        stage('deploy_production') {
            steps {
                echo "Deploying to production"
            }
            post {
                success {
                    sh "sh ./send_notification.sh 'production deployment' 0"
                }
                failure {
                    sh "sh ./send_notification.sh 'production deployment' 1"
                }  
            }
        }
        stage('test_production') {
            stages {
                stage('setup_test_env'){
                    steps {
                        echo "Testing on staging"
                        sh "docker pull rolandsjlociks/mvn_tests:latest"
                        sh "docker compose -f docker-compose-web.yaml up -d"
                        
                    }
                }
                stage('run_tests'){
                    parallel {
                            stage ("chrome") {
                                steps {
                                sh "docker run --network=test-automation-setup rolandsjlociks/mvn_tests mvn clean test -Dbrowser=chrome -DgridURL=chrome:5555"
                                }
                            }
                            stage("firefox") {
                            steps {
                                sh "docker run --network=test-automation-setup rolandsjlociks/mvn_tests mvn clean test -Dbrowser=firefox -DgridURL=firefox:5555"
                                }
                            }
                    }
                }
        }
                
                
            post {
                always {
                    sh "docker compose down"
                }
                success {
                    sh "sh ./send_notification.sh 'production testing' 0"
                }
                failure {
                    sh "sh ./send_notification.sh 'production testing' 1"
                }  
            }
        }
    }


}

    